#!/usr/bin/python

import sys

sys.argv.pop(0)

names = [ f.rsplit("/", 1)[-1] for f in sys.argv]

elfs = ["_binary_{}_start".format(f.replace("/", "_").replace(".", "_")) for f in sys.argv]

last_elf = len(elfs) - 1

print "#ifndef _USER_PROCESSES_H_"
print "#define _USER_PROCESSES_H_"
print
print "/*"
print " * WARNING: this header is auto-generated by misc/build_user_proc_table.py"
print " *          changes to this file will be overwritten"
print " */"
print
print "enum __USER_PROCESS {"
for name in names:
	print "\tUSER_PROCESS_{},".format(name)
print "\tMAX_VDEV"
print "};"
print
print "#ifdef _KERN_"
print
print "extern uint8_t "
for i, elf in enumerate(elfs):
	end = ","
	if i == last_elf:
		end = ";"
	print "\t{0}[]{1}".format(elf, end)
print
for name, elf in zip(names, elfs):
	print "#define ELF_{0} ((uintptr_t) {1})".format(name, elf)
print

print "static uintptr_t vdev_elf_addr[MAX_VDEV] ="
print "{"
for name, elf in zip(names, elfs):
	print "\t[USER_PROCESS_{0}]\t= ELF_{0},".format(name)
print "};"

print
print "#endif /*_KERN_*/"
print
print "#endif"
print
